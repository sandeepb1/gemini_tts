name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort pylint mypy
        pip install homeassistant voluptuous google-cloud-speech google-cloud-texttospeech google-generativeai
        pip install pytest pytest-asyncio pytest-mock pytest-cov
    
    - name: Run black (code formatting)
      run: black --check --diff custom_components/
    
    - name: Run isort (import sorting)
      run: isort --check-only --diff custom_components/
    
    - name: Run flake8 (linting)
      run: flake8 custom_components/ --max-line-length=88 --extend-ignore=E203,W503
    
    - name: Run pylint
      run: pylint custom_components/voice_assistant_gemini/ --disable=C0114,C0115,C0116,R0903,R0913

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install homeassistant voluptuous google-cloud-speech google-cloud-texttospeech google-generativeai
        pip install types-requests
    
    - name: Run mypy (type checking)
      run: mypy custom_components/voice_assistant_gemini/ --strict --ignore-missing-imports

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install homeassistant voluptuous google-cloud-speech google-cloud-texttospeech google-generativeai
        pip install pytest pytest-asyncio pytest-mock pytest-cov pytest-homeassistant-custom-component
        pip install boto3 azure-cognitiveservices-speech vosk
    
    - name: Run tests with coverage
      run: |
        pytest tests/ -v --cov=custom_components/voice_assistant_gemini --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  validate-hacs:
    name: Validate HACS
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: HACS Action
      uses: hacs/action@main
      with:
        category: integration

  validate-hassfest:
    name: Validate with hassfest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Hassfest validation
      uses: home-assistant/actions/hassfest@master 